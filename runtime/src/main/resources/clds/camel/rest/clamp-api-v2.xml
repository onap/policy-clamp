<rests xmlns="http://camel.apache.org/schema/spring">
    <rest>
        <get uri="/v2/policyToscaModels"
             outType="org.onap.policy.clamp.loop.template.PolicyModel"
             produces="application/json">
            <route>
                <removeHeaders pattern="*"/>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET ALL Tosca Policy Models')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'tosca','','read')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.loop.template.PolicyModelsService?method=getAllPolicyModels()"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Policy Models request failed for: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET Policy models FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>
        <get uri="/v2/policyToscaModels/{policyModelType}/{policyModelVersion}"
             outType="com.google.gson.JsonObject" produces="application/json">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="policyModelType|policyModelVersion"/>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Tosca Policy Model by Name/Version')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'tosca','','read')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.loop.template.PolicyModelsService?method=getPolicyModelJson(${header.policyModelType},${header.policyModelVersion})"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Policy Model request failed for type: ${header.policyModelType}, ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET Policy model FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>
        <get uri="/v2/policyToscaModels/yaml/{policyModelType}/{policyModelVersion}"
             outType="java.lang.String" produces="application/json">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="policyModelType|policyModelVersion"/>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Tosca Policy Model Yaml String by Name/Version')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'tosca','','read')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.loop.template.PolicyModelsService?method=getPolicyModelTosca(${header.policyModelType},${header.policyModelVersion})"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Policy Model YAML request failed for type: ${header.policyModelType}, ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET Policy model YAML FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>

        <!-- Policy Related endpoints, not related to LOOP  -->
        <get uri="/v2/policies" outType="com.google.gson.JsonObject" produces="application/json">
            <route>
                <removeHeaders pattern="*"/>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Policies List ')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'policies','','read')"/>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">true</simple>
                    </setProperty>
                    <to uri="direct:get-all-policies"/>
                    <setProperty name="policiesListResponse">
                        <simple>${body}</simple>
                    </setProperty>
                    <to uri="direct:get-all-pdp-groups"/>
                    <setProperty name="pdpGroupInfoResponse">
                        <simple>${body}</simple>
                    </setProperty>
                    <setBody>
                        <method ref="org.onap.policy.clamp.policy.pdpgroup.PoliciesPdpMerger"
                                method="mergePoliciesAndPdpGroupStates(${exchangeProperty[policiesListResponse]},${exchangeProperty[pdpGroupInfoResponse]})"/>
                    </setBody>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Policies list JSON request failed: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET Policies list JSON FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>

        <!-- Create a new policy -->
        <post uri="/v2/policies/{policyModelType}/{policyModelVersion}/{policyName}/{policyVersion}"
              type="com.google.gson.JsonElement"
              consumes="application/json"
              outType="com.google.gson.JsonObject"
              produces="application/json">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="policyModelType|policyModelVersion|policyName|policyVersion"/>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'CREATE a new Policy ')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'policies','','update')"/>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">true</simple>
                    </setProperty>
                    <setProperty name="policyModelType">
                        <simple>${header.policyModelType}</simple>
                    </setProperty>
                    <setProperty name="policyModelVersion">
                        <simple>${header.policyModelVersion}</simple>
                    </setProperty>
                    <setProperty name="policyProperties">
                        <simple>${body}</simple>
                    </setProperty>
                    <to
                            uri="bean:org.onap.policy.clamp.loop.template.PolicyModelsService?method=getPolicyModelTosca(${header.policyModelType},${header.policyModelVersion})"/>
                    <setBody>
                        <method ref="org.onap.policy.clamp.policy.PolicyPayload"
                                method="createPolicyPayload(${header.policyModelType}, ${header.policyModelVersion},
                                    ${header.policyName}, ${header.policyVersion}, ${exchangeProperty[policyProperties]}, ${body})"/>
                    </setBody>
                    <to uri="direct:create-policy"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="CREATE Policy request failed for type: ${header.policyModelType}/${header.policyModelVersion}, ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>CREATE Policy FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </post>

        <delete uri="/v2/policies/{policyModelType}/{policyModelVersion}/{policyName}/{policyVersion}">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="policyModelType|policyModelVersion|policyName|policyVersion"/>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'DELETE a Policy ')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'policies','','update')"/>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">true</simple>
                    </setProperty>
                    <setProperty name="policyModelType">
                        <simple>${header.policyModelType}</simple>
                    </setProperty>
                    <setProperty name="policyModelVersion">
                        <simple>${header.policyModelVersion}</simple>
                    </setProperty>
                    <setProperty name="policyName">
                        <simple>${header.policyName}</simple>
                    </setProperty>
                    <setProperty name="policyVersion">
                        <simple>${header.policyVersion}</simple>
                    </setProperty>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">false</simple>
                    </setProperty>
                    <to uri="direct:undeploy-one-policy-from-pap"/>
                    <to uri="direct:delete-policy"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="DELETE Policy request failed for policy: ${header.policyName}/${header.policyVersion}, ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>DELETE Policy FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </delete>

        <post uri="/v2/policies/policytype" type="java.lang.String" consumes="plain/text">
            <route>
                <removeHeaders pattern="*"/>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'Create policy type')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'policies','','update')"/>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">true</simple>
                    </setProperty>
                    <to uri="direct:create-policy-type"/>
                    <to
                            uri="bean:org.onap.policy.clamp.policy.downloader.PolicyEngineController?method=synchronizeAllPolicies()"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="Create policy type request failed: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>Create policy type request FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </post>

        <get uri="/v2/acm/getToscaTemplate" outType="java.lang.String" bindingMode="off"
             produces="application/json">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="name|version"/>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Tosca Service Template ')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','read')"/>
                    <setHeader name="Content-Type">
                        <constant>application/json</constant>
                    </setHeader>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">false</simple>
                    </setProperty>
                    <to uri="direct:get-service-template"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Tosca Service Template JSON request failed: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET Tosca Service Template JSON FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>

        <post uri="/v2/acm/commissionToscaTemplate"
              type="java.lang.String"
              consumes="plain/text"
              outType="java.lang.String"
              produces="application/json"
              bindingMode="off">
            <route>
                <removeHeaders pattern="*"/>
                <setProperty name="raiseHttpExceptionFlag">
                    <simple resultType="java.lang.Boolean">false</simple>
                </setProperty>
                <setHeader name="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'Update the global properties')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','update')"/>
                    <to uri="direct:commission-service-template"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="Commissioning of Tosca Service Template FAILED"/>

                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>Commissioning Tosca Service Template FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </post>

        <delete uri="/v2/acm/decommissionToscaTemplate"
              type="java.lang.String"
              consumes="plain/text"
              outType="java.lang.String"
              produces="application/json"
              bindingMode="off">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="name|version|requestId"/>
                <setProperty name="raiseHttpExceptionFlag">
                    <simple resultType="java.lang.Boolean">false</simple>
                </setProperty>
                <setHeader name="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'Delete Tosca Service Template')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','update')"/>
                    <to uri="direct:decommission-service-template"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="Decommissioning of Tosca Service Template FAILED"/>

                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>Decommissioning Tosca Service Template FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </delete>

        <delete uri="/v2/acm/deleteToscaInstantiation"
                type="java.lang.String"
                consumes="plain/text"
                outType="java.lang.String"
                produces="application/json"
                bindingMode="off">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="name|version|requestId"/>
                <setProperty name="raiseHttpExceptionFlag">
                    <simple resultType="java.lang.Boolean">false</simple>
                </setProperty>
                <setHeader name="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'Delete Tosca Service Template')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','update')"/>
                    <to uri="direct:delete-tosca-instantiation"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="Deleting Tosca Instantiation FAILED"/>

                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>Deleting Tosca Instantiation FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </delete>

        <get uri="/v2/acm/getToscaInstantiation" outType="java.lang.String" bindingMode="off" produces="application/json">
            <route>
                <removeHeaders pattern="*"/>
                <doTry>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Tosca Instantiation ')"/>
                    <to uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','read')"/>
                    <setHeader name="Content-Type">
                        <constant>application/json</constant>
                    </setHeader>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">true</simple>
                    </setProperty>
                    <to uri="direct:get-tosca-instantiation"/>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Tosca Instantiation JSON request failed: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET Tosca Instantiation JSON FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>
        <get uri="/v2/acm/getInstantiationOrderState" outType="java.lang.String" bindingMode="off" produces="application/json">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="name|version|requestId"/>
                <doTry>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Tosca Instantiation ')"/>
                    <to uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','read')"/>
                    <setHeader name="Content-Type">
                        <constant>application/json</constant>
                    </setHeader>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">true</simple>
                    </setProperty>
                    <to uri="direct:get-tosca-instantiation-order-state"/>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Tosca Instantiation Order State JSON request failed: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET Tosca Instantiation Order State JSON FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>
        <get uri="/v2/acm/getJsonSchema" outType="java.lang.String" bindingMode="off" produces="application/json">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="section"/>
                <doTry>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Json Schema ')"/>
                    <to uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','read')"/>
                    <setHeader name="Content-Type">
                        <constant>application/json</constant>
                    </setHeader>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">true</simple>
                    </setProperty>
                    <to uri="direct:get-json-schema"/>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET JSON Schema request failed: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET JSON Schema FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>

        <get uri="/v2/acm/getElementDefinitions" outType="java.lang.String" bindingMode="off" produces="application/json">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="name|version|requestId"/>
                <doTry>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Json Schema ')"/>
                    <to uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','read')"/>
                    <setHeader name="Content-Type">
                        <constant>application/json</constant>
                    </setHeader>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">true</simple>
                    </setProperty>
                    <to uri="direct:get-element-definitions"/>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Element Definitions request failed: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET JSON Schema FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>

        <get uri="/v2/acm/getAutomationCompositionDefinitions" outType="java.lang.String" bindingMode="off" produces="application/json">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="name|version|requestId"/>
                <doTry>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Json Schema ')"/>
                    <to uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','read')"/>
                    <setHeader name="Content-Type">
                        <constant>application/json</constant>
                    </setHeader>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">true</simple>
                    </setProperty>
                    <to uri="direct:get-acm-definitions"/>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Automation Composition Definitions request failed: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET Automation Composition Definitions FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>

        <post uri="/v2/acm/postToscaInstanceProperties"
              type="java.lang.String"
              consumes="plain/text"
              outType="java.lang.String"
              produces="application/json"
              bindingMode="off">
            <route>
                <removeHeaders pattern="*"/>
                <setProperty name="raiseHttpExceptionFlag">
                    <simple resultType="java.lang.Boolean">false</simple>
                </setProperty>
                <setHeader name="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'Update the global properties')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','update')"/>
                    <to uri="direct:post-tosca-instance-properties"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="Creating Instance Properties FAILED"/>

                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>Creating Instance Properties FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </post>
        <delete uri="/v2/acm/deleteToscaInstanceProperties"
                type="java.lang.String"
                consumes="plain/text"
                outType="java.lang.String"
                produces="application/json"
                bindingMode="off">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="name|version|requestId"/>
                <setProperty name="raiseHttpExceptionFlag">
                    <simple resultType="java.lang.Boolean">false</simple>
                </setProperty>
                <setHeader name="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'Delete Tosca Service Template')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','update')"/>
                    <to uri="direct:delete-tosca-instance-properties"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="Deleting Tosca Instance Properties FAILED"/>

                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>Deleting Tosca Instance Properties FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </delete>

        <get uri="/v2/acm/getCommonOrInstanceProperties" outType="java.lang.String" bindingMode="off" produces="application/json">
            <route>
                <removeHeaders pattern="*"
                               excludePattern="name|version|requestId|common"/>
                <doTry>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'GET Common Properties ')"/>
                    <to uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','read')"/>
                    <setHeader name="Content-Type">
                        <constant>application/json</constant>
                    </setHeader>
                    <setProperty name="raiseHttpExceptionFlag">
                        <simple resultType="java.lang.Boolean">false</simple>
                    </setProperty>
                    <to uri="direct:get-common-or-instance-properties"/>
                    <to uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="GET Common Or Instance Properties request failed: ${exception.stacktrace}"/>
                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>GET Common Properties FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </get>

        <post uri="/v2/acm/postToscaInstantiation"
              type="java.lang.String"
              consumes="plain/text"
              outType="java.lang.String"
              produces="application/json"
              bindingMode="off">
            <route>
                <removeHeaders pattern="*"/>
                <setProperty name="raiseHttpExceptionFlag">
                    <simple resultType="java.lang.Boolean">true</simple>
                </setProperty>
                <setHeader name="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'Update the global properties')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','update')"/>
                    <to uri="direct:post-tosca-instantiation"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="Create Tosca Instantiation Service FAILED"/>

                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>Create Tosca Instantiation Service FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </post>

        <put uri="/v2/acm/putToscaInstantiationStateChange"
              type="java.lang.String"
              consumes="plain/text"
              outType="java.lang.String"
              produces="application/json"
              bindingMode="off">
            <route>
                <removeHeaders pattern="*"/>
                <setProperty name="raiseHttpExceptionFlag">
                    <simple resultType="java.lang.Boolean">true</simple>
                </setProperty>
                <setHeader name="Content-Type">
                    <constant>application/json</constant>
                </setHeader>
                <doTry>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=startLog(*, 'Update the global properties')"/>
                    <to
                            uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=authorize(*,'cl','','update')"/>
                    <to uri="direct:put-tosca-instantiation"/>
                    <to
                            uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=endLog()"/>
                    <doCatch>
                        <exception>java.lang.Exception</exception>
                        <handled>
                            <constant>true</constant>
                        </handled>
                        <to
                                uri="bean:org.onap.policy.clamp.flow.log.FlowLogOperation?method=errorLog()"/>
                        <log loggingLevel="ERROR"
                             message="Tosca Instantiation State Change Service FAILED"/>

                        <setHeader name="CamelHttpResponseCode">
                            <constant>500</constant>
                        </setHeader>
                        <setBody>
                            <simple>Tosca Instantiation State Change Service FAILED</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </put>

        <get uri="/v2/clampInformation" outType="org.onap.policy.clamp.clds.model.ClampInformation"
             produces="application/json">
            <route>
                <to
                        uri="bean:org.onap.policy.clamp.authorization.AuthorizationController?method=getClampInformation()"/>
            </route>
        </get>
    </rest>
</rests>
