# ============LICENSE_START=======================================================
# Copyright (C) 2025 OpenInfra Foundation Europe. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# ============LICENSE_END=========================================================

databaseChangeLog:
  - objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS

  - changeSet:
      id: 1400-1
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: automationcomposition
      changes:
        - sql:
            sql: |
              CREATE TABLE automationcomposition (
                instanceId VARCHAR(255) NOT NULL,
                compositionId VARCHAR(255),
                compositionTargetId VARCHAR(255),
                deployState SMALLINT DEFAULT NULL,
                description VARCHAR(255),
                lockState SMALLINT DEFAULT NULL,
                name VARCHAR(255),
                restarting BOOLEAN,
                stateChangeResult SMALLINT DEFAULT NULL,
                version VARCHAR(255),
                CONSTRAINT PK_AUTOMATIONCOMPOSITION PRIMARY KEY (instanceId)
              );

  - changeSet:
      id: 1400-2
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: automationcompositiondefinition
      changes:
        - sql:
            sql: |
              CREATE TABLE automationcompositiondefinition (
                compositionId VARCHAR(255) NOT NULL,
                name VARCHAR(255),
                restarting BOOLEAN,
                serviceTemplate TEXT,
                state SMALLINT DEFAULT NULL,
                stateChangeResult SMALLINT DEFAULT NULL,
                version VARCHAR(255),
                CONSTRAINT PK_AUTOMATIONCOMPOSITIONDEFINITION PRIMARY KEY (compositionId)
              );

  - changeSet:
      id: 1400-3
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: automationcompositionelement
      changes:
        - sql:
            sql: |
              CREATE TABLE automationcompositionelement (
                elementId VARCHAR(255) NOT NULL,
                definition_name VARCHAR(255),
                definition_version VARCHAR(255),
                deployState SMALLINT DEFAULT NULL,
                description VARCHAR(255),
                instanceId VARCHAR(255),
                lockState SMALLINT DEFAULT NULL,
                message VARCHAR(255),
                operationalState VARCHAR(255),
                outProperties TEXT,
                participantId VARCHAR(255),
                properties TEXT,
                restarting BOOLEAN,
                useState VARCHAR(255),
                CONSTRAINT PK_AUTOMATIONCOMPOSITIONELEMENT PRIMARY KEY (elementId)
              );

  - changeSet:
      id: 1400-4
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: nodetemplatestate
      changes:
        - sql:
            sql: |
              CREATE TABLE nodetemplatestate (
                nodeTemplateStateId VARCHAR(255) NOT NULL,
                compositionId VARCHAR(255),
                message VARCHAR(255),
                nodeTemplate_name VARCHAR(255),
                nodeTemplate_version VARCHAR(255),
                outProperties TEXT,
                participantId VARCHAR(255),
                restarting BOOLEAN,
                state SMALLINT DEFAULT NULL,
                CONSTRAINT PK_NODETEMPLATESTATE PRIMARY KEY (nodeTemplateStateId)
              );

  - changeSet:
      id: 1400-5
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: participant
      changes:
        - sql:
            sql: |
              CREATE TABLE participant (
                participantId VARCHAR(255) NOT NULL,
                description VARCHAR(255),
                participantState SMALLINT DEFAULT NULL,
                CONSTRAINT PK_PARTICIPANT PRIMARY KEY (participantId)
              );

  - changeSet:
      id: 1400-6
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: participantsupportedacelements
      changes:
        - sql:
            sql: |
              CREATE TABLE participantsupportedacelements (
                id VARCHAR(255) NOT NULL,
                participantId VARCHAR(255),
                typeName VARCHAR(255),
                typeVersion VARCHAR(255),
                CONSTRAINT PK_PARTICIPANTSUPPORTEDACELEMENTS PRIMARY KEY (id)
              );

  - changeSet:
      id: 1400-7
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - indexExists:
                indexName: ac_compositionId
      changes:
        - sql:
            sql: CREATE INDEX ac_compositionId ON automationcomposition(compositionId);

  - changeSet:
      id: 1400-8
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - indexExists:
                indexName: ac_element_fk
      changes:
        - sql:
            sql: CREATE INDEX ac_element_fk ON automationcompositionelement(instanceId);

  - changeSet:
      id: 1400-9
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - indexExists:
                indexName: dt_element_fk
      changes:
        - sql:
            sql: CREATE INDEX dt_element_fk ON nodetemplatestate(compositionId);

  - changeSet:
      id: 1400-10
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - indexExists:
                indexName: supported_element_fk
      changes:
        - sql:
            sql: CREATE INDEX supported_element_fk ON participantsupportedacelements(participantId);

  - changeSet:
      id: 1400-11
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - foreignKeyConstraintExists:
                foreignKeyName: ac_element_fk
                foreignKeyTableName: automationcompositionelement
      changes:
        - sql:
            sql: |
              ALTER TABLE automationcompositionelement
                ADD CONSTRAINT ac_element_fk
                FOREIGN KEY (instanceId)
                REFERENCES automationcomposition (instanceId)
                ON UPDATE RESTRICT
                ON DELETE RESTRICT;

  - changeSet:
      id: 1400-12
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - foreignKeyConstraintExists:
                foreignKeyName: dt_element_fk
                foreignKeyTableName: nodetemplatestate
      changes:
        - sql:
            sql: |
              ALTER TABLE nodetemplatestate
                ADD CONSTRAINT dt_element_fk
                FOREIGN KEY (compositionId)
                REFERENCES automationcompositiondefinition (compositionId)
                ON UPDATE RESTRICT
                ON DELETE RESTRICT;

  - changeSet:
      id: 1400-13
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - foreignKeyConstraintExists:
                foreignKeyName: supported_element_fk
                foreignKeyTableName: participantsupportedacelements
      changes:
        - sql:
            sql: |
              ALTER TABLE participantsupportedacelements
                ADD CONSTRAINT supported_element_fk
                FOREIGN KEY (participantId)
                REFERENCES participant (participantId)
                ON UPDATE RESTRICT
                ON DELETE RESTRICT;
