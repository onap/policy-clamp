# ============LICENSE_START=======================================================
# Copyright (C) 2025 OpenInfra Foundation Europe. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# ============LICENSE_END=========================================================

databaseChangeLog:
  - objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS

  - changeSet:
      id: 1500-1
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - columnExists:
                tableName: automationcomposition
                columnName: lastMsg
      changes:
        - sql:
            sql: ALTER TABLE automationcomposition ADD lastMsg timestamp without time zone DEFAULT Now();

  - changeSet:
      id: 1500-2
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - columnExists:
                tableName: automationcomposition
                columnName: phase
      changes:
        - sql:
            sql: ALTER TABLE automationcomposition ADD phase SMALLINT DEFAULT 0;

  - changeSet:
      id: 1500-3
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - columnExists:
                tableName: automationcompositiondefinition
                columnName: lastMsg
      changes:
        - sql:
            sql: ALTER TABLE automationcompositiondefinition ADD lastMsg timestamp without time zone DEFAULT Now();

  - changeSet:
      id: 1500-4
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - tableExists:
                tableName: participantreplica
      changes:
        - sql:
            sql: |
              CREATE TABLE participantreplica (
                replicaId varchar(255) NOT NULL,
                lastMsg timestamp without time zone DEFAULT Now(),
                participantId varchar(255) DEFAULT NULL,
                participantState SMALLINT DEFAULT NULL,
                CONSTRAINT PK_PARTICIPANT_REPLICA PRIMARY KEY (replicaId)
              );

  - changeSet:
      id: 1500-5
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - columnExists:
                tableName: participant
                columnName: lastMsg
      changes:
        - sql:
            sql: ALTER TABLE participant ADD lastMsg timestamp without time zone DEFAULT Now();

  - changeSet:
      id: 1500-6
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - indexExists:
                indexName: participant_replica_fk
      changes:
        - sql:
            sql: CREATE INDEX participant_replica_fk ON participantreplica(participantId);

  - changeSet:
      id: 1500-7
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - not:
            - foreignKeyConstraintExists:
                foreignKeyName: participant_replica_fk
                foreignKeyTableName: participantreplica
      changes:
        - sql:
            sql: |
              ALTER TABLE participantreplica
                ADD CONSTRAINT participant_replica_fk
                FOREIGN KEY (participantId)
                REFERENCES participant (participantId)
                ON UPDATE RESTRICT
                ON DELETE RESTRICT;

  - changeSet:
      id: 1500-8
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - columnExists:
            tableName: automationcomposition
            columnName: restarting
      changes:
        - sql:
            sql: UPDATE automationcomposition SET restarting = NULL;

  - changeSet:
      id: 1500-9
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - columnExists:
            tableName: automationcompositiondefinition
            columnName: restarting
      changes:
        - sql:
            sql: UPDATE automationcompositiondefinition SET restarting = NULL;

  - changeSet:
      id: 1500-10
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - columnExists:
            tableName: automationcompositionelement
            columnName: restarting
      changes:
        - sql:
            sql: UPDATE automationcompositionelement SET restarting = NULL;

  - changeSet:
      id: 1500-11
      author: policy
      preConditions:
        - onFail: MARK_RAN
        - columnExists:
            tableName: nodetemplatestate
            columnName: restarting
      changes:
        - sql:
            sql: UPDATE nodetemplatestate SET restarting = NULL;
