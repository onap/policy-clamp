{
  "comments": [
    {
      "key": {
        "uuid": "5a36490f_5aa595d9",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/handler/PolicyHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-04-07T14:22:45Z",
      "side": 1,
      "message": "it seems that start, stop, could be toggled in sequences, should stop check that policyProvider !\u003d null ?\nDo they have to be synchronized?",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0beac7f_4ebb3550",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/handler/PolicyHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-04-07T14:41:32Z",
      "side": 1,
      "message": "this follows the same model as the others.  Not sure it\u0027s necessary to sync, but if we do, then we should go back and change all of the others, too",
      "parentUuid": "5a36490f_5aa595d9",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08624a97_6b289abe",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/handler/PolicyHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-04-07T14:56:03Z",
      "side": 1,
      "message": "ok, let\u0027s not change, as long as the caller uses are careful enough",
      "parentUuid": "c0beac7f_4ebb3550",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92c8d963_c9658a0f",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/handler/PolicyHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-04-07T14:22:45Z",
      "side": 1,
      "message": "can move this line under 109, and change the line 110 catch to IOException | PfModelException since lines 111 and 117 are identical",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ca26ea8_b8509108",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/handler/PolicyHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-04-07T14:41:32Z",
      "side": 1,
      "message": "need to ensure that both close() methods are called, even if the first throws an exception, thus they had to be separated into separate try/catch blocks.",
      "parentUuid": "92c8d963_c9658a0f",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1173799_53622b76",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/handler/PolicyHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-04-07T14:56:03Z",
      "side": 1,
      "message": "Ok, I see, it will be more cumbersome to take care of inside the catch clause.",
      "parentUuid": "1ca26ea8_b8509108",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a02a8c13_b5de0b82",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/handler/PolicyProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-04-07T14:22:45Z",
      "side": 1,
      "message": "I think this can can also be made final",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c9037ad_fabe0c54",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/handler/PolicyProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 7504
      },
      "writtenOn": "2021-04-07T20:20:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a02a8c13_b5de0b82",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c2cfce5_727eb4a7",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/parameters/ParticipantPolicyParameterHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-04-07T14:22:45Z",
      "side": 1,
      "message": "I thought coder.decode in line 54 always returns an object, but not 100% sure, if that was the case, this cannot be null, as it will not reach it per line 58, if you can double check to make sure?",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d58a25e_60a0e557",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/parameters/ParticipantPolicyParameterHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-04-07T14:41:32Z",
      "side": 1,
      "message": "looks like the comment on line 61 is correct.  Wonder if we should change the standard coder to always return an object or throw an exception if the resulting object is null?",
      "parentUuid": "1c2cfce5_727eb4a7",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81e7d8dc_31cfe805",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/parameters/ParticipantPolicyParameterHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 477
      },
      "writtenOn": "2021-04-07T14:56:03Z",
      "side": 1,
      "message": "Ok, I tend to think that an exception in this case, will be more appropriate, but not worth to change it if we need to change the common standardcoder, out of scope of this review, so have no issue.",
      "parentUuid": "6d58a25e_60a0e557",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6440bcc1_dc20349b",
        "filename": "tosca-controlloop/participant/participant-impl/participant-impl-policy/src/main/java/org/onap/policy/clamp/controlloop/participant/policy/main/parameters/ParticipantPolicyParameterHandler.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-04-07T15:01:20Z",
      "side": 1,
      "message": "I created https://jira.onap.org/browse/POLICY-3172 to fix the standard coder.",
      "parentUuid": "81e7d8dc_31cfe805",
      "revId": "cd5d3e4757c167e8dca39fbdc545a1b4bbe7ba8b",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}