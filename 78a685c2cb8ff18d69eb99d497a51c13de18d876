{
  "comments": [
    {
      "key": {
        "uuid": "9387b312_e4959993",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 84,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-13T17:37:49Z",
      "side": 1,
      "message": "don\u0027t think these are needed, as local variables are probably sufficient",
      "range": {
        "startLine": 81,
        "startChar": 3,
        "endLine": 84,
        "endChar": 0
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a268e23_17fd0208",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-13T17:37:49Z",
      "side": 1,
      "message": "why not just use Integer.parseInt?\n\na better option might be to declare a small nested static parameter class containing these two fields (with their default values) and then use the CODER.convert method to do the decoding:\n\n  public static class Config {\n    private int threadTimeout \u003d 60;\n    private int podStatusCheckInterval \u003d 30;\n  }\n\n  var config \u003d CODER.convert(getProperties(), Config.class)\n\nno more need for string constants, Float.parse, etc.",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c4ef95d_e31f77d8",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 6070
      },
      "writtenOn": "2021-07-14T12:39:12Z",
      "side": 1,
      "message": "Hi Jim, Actually this code is to fetch the values passed in TOSCA. I can make a nested class for the default values but still we will need this parsing code to fetch values coming from TOSCA.  Float.parse was used because in Junits, I noticed, the value from TOSCA was parsed as 180.0 which caused exception in Integer.parse",
      "parentUuid": "9a268e23_17fd0208",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41148955_2c5fb6a9",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-14T14:45:03Z",
      "side": 1,
      "message": "the sample code above is designed to extract the values from TOSCA; it assumes that getProperties() returns a Map, which it then decodes into the Config class.  If you try it, it will probably work.  (Also, looks like it will still work even if it\u0027s declared as \"private static\" instead of \"public static\".)\n\nI\u0027d like to know how the \"180.0\" is being created - sounds like we may have an issue in the code that decodes the TOSCA.  Nevertheless, using the CODER as in the example code should work (gson is smart enough to strip off any trailing \".0\"), provided it\u0027s a Number and not a String.",
      "parentUuid": "9c4ef95d_e31f77d8",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d074cba9_b76c382c",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-14T14:47:21Z",
      "side": 1,
      "message": "oh, and the threadTimeout field should be renamed to uninitializedToPassiveTimeout, to match the property name",
      "parentUuid": "41148955_2c5fb6a9",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}