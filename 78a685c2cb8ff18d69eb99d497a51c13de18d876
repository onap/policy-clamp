{
  "comments": [
    {
      "key": {
        "uuid": "9387b312_e4959993",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 84,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-13T17:37:49Z",
      "side": 1,
      "message": "don\u0027t think these are needed, as local variables are probably sufficient",
      "range": {
        "startLine": 81,
        "startChar": 3,
        "endLine": 84,
        "endChar": 0
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c0dd1b3_6acf5163",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 84,
      "author": {
        "id": 6070
      },
      "writtenOn": "2021-07-14T16:36:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9387b312_e4959993",
      "range": {
        "startLine": 81,
        "startChar": 3,
        "endLine": 84,
        "endChar": 0
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a268e23_17fd0208",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-13T17:37:49Z",
      "side": 1,
      "message": "why not just use Integer.parseInt?\n\na better option might be to declare a small nested static parameter class containing these two fields (with their default values) and then use the CODER.convert method to do the decoding:\n\n  public static class Config {\n    private int threadTimeout \u003d 60;\n    private int podStatusCheckInterval \u003d 30;\n  }\n\n  var config \u003d CODER.convert(getProperties(), Config.class)\n\nno more need for string constants, Float.parse, etc.",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c4ef95d_e31f77d8",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 6070
      },
      "writtenOn": "2021-07-14T12:39:12Z",
      "side": 1,
      "message": "Hi Jim, Actually this code is to fetch the values passed in TOSCA. I can make a nested class for the default values but still we will need this parsing code to fetch values coming from TOSCA.  Float.parse was used because in Junits, I noticed, the value from TOSCA was parsed as 180.0 which caused exception in Integer.parse",
      "parentUuid": "9a268e23_17fd0208",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41148955_2c5fb6a9",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-14T14:45:03Z",
      "side": 1,
      "message": "the sample code above is designed to extract the values from TOSCA; it assumes that getProperties() returns a Map, which it then decodes into the Config class.  If you try it, it will probably work.  (Also, looks like it will still work even if it\u0027s declared as \"private static\" instead of \"public static\".)\n\nI\u0027d like to know how the \"180.0\" is being created - sounds like we may have an issue in the code that decodes the TOSCA.  Nevertheless, using the CODER as in the example code should work (gson is smart enough to strip off any trailing \".0\"), provided it\u0027s a Number and not a String.",
      "parentUuid": "9c4ef95d_e31f77d8",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d074cba9_b76c382c",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-14T14:47:21Z",
      "side": 1,
      "message": "oh, and the threadTimeout field should be renamed to uninitializedToPassiveTimeout, to match the property name",
      "parentUuid": "41148955_2c5fb6a9",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bb67efb_5fcf9fc3",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 6070
      },
      "writtenOn": "2021-07-14T15:28:34Z",
      "side": 1,
      "message": "properties:\n        provider: ONAP\n        participant_id:\n          name: org.onap.k8s.controlloop.K8SControlLoopParticipant\n          version: 2.3.4\n        uninitializedToPassiveTimeout: 180\n        podStatusCheckInterval: 30\n        chart:\n          chartId:\n            name: hello\n            version: 0.1.0\n          releaseName: helloworld\n          namespace: onap\n          repository: chartMuseum\n\nCurrently uninitializedToPassiveTimeout and podStatusCheckInterval are added under properties of a CL element as per the yaml definitions added as part of this review. https://gerrit.nordix.org/c/onap/policy/clamp/+/9535/4/common/src/main/resources/tosca/ControlLoopTOSCAServiceTemplateTypes.yaml \n\nI can add a separate map \u0027config\u0027 under the properties to be decoded as Config.class?",
      "parentUuid": "d074cba9_b76c382c",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a83adcc_4b6487e9",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-14T15:42:57Z",
      "side": 1,
      "message": "don\u0027t need a separate map - getProperties() already returns a Map which appears to have two items in it (among others).  The convert() method will map those two items into the Config structure, thus it will expect to find  uninitializedToPassiveTimeout and podStatusCheckInterval.  If it doesn\u0027t find them, then they will be left with their default values, as defined in the class.\n\nBasically, any time you want to extract configuration items from a Map, all you have to do is define a class containing the relevant items and then invoke CODER.convert(map, MyClass.class).  The coder will handle type conversions for you.  If you wanted to validate the values (not necessarily needed in this case), then you could add validation annotations to the class and use the BeanValidator to check it.  This approach eliminates all of the gross code for extracting, parsing, and validating items in a Map.  When there\u0027s only one item, we typically do it the old-fashioned way, but once you hit two or more items, this is the preferred approach.  (Even with just one item, if validation is needed, then this approach is preferred.)",
      "parentUuid": "9bb67efb_5fcf9fc3",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a14e44fe_e0aac443",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 6070
      },
      "writtenOn": "2021-07-14T16:36:43Z",
      "side": 1,
      "message": "Thanks Jim. Learnt about CODER.convert(). Have explored only decode/encode methods so far. This really simplified the task. \n\nprivate static ToscaServiceTemplate testControlLoopYamlSerialization(String controlLoopFilePath) {\n        String controlLoopString \u003d ResourceUtils.getResourceAsString(controlLoopFilePath);\n        ToscaServiceTemplate serviceTemplate \u003d yamlTranslator.fromYaml(controlLoopString, ToscaServiceTemplate.class);\n        return serviceTemplate;\n    }\n\nThe yamlTranslator in the above method in TestUtils.java was actually causing the decimal value.",
      "parentUuid": "4a83adcc_4b6487e9",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b35d6798_ef874283",
        "filename": "participant/participant-impl/participant-impl-kubernetes/src/main/java/org/onap/policy/clamp/controlloop/participant/kubernetes/handler/ControlLoopElementHandler.java",
        "patchSetId": 6
      },
      "lineNbr": 162,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-14T19:36:08Z",
      "side": 1,
      "message": "glad it helped.\n\nnice thing is that this works whether or not it\u0027s 180.0, but it\u0027s good to know that this only happens in junit tests - thanks!",
      "parentUuid": "a14e44fe_e0aac443",
      "range": {
        "startLine": 162,
        "startChar": 49,
        "endLine": 162,
        "endChar": 71
      },
      "revId": "78a685c2cb8ff18d69eb99d497a51c13de18d876",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}