<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Policy Clamp ACM Stability" enabled="true">
      <stringProp name="TestPlan.comments">Policy Clamp ACM Stability Tests</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="RUNTIME_HOST" elementType="Argument">
            <stringProp name="Argument.name">RUNTIME_HOST</stringProp>
            <stringProp name="Argument.value">192.168.48.9</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RUNTIME_PORT" elementType="Argument">
            <stringProp name="Argument.name">RUNTIME_PORT</stringProp>
            <stringProp name="Argument.value">6969</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="POLICY_PARTICIPANT_HOST" elementType="Argument">
            <stringProp name="Argument.name">POLICY_PARTICIPANT_HOST</stringProp>
            <stringProp name="Argument.value">192.168.48.8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="POLICY_PARTICIPANT_HOST_PORT" elementType="Argument">
            <stringProp name="Argument.name">POLICY_PARTICIPANT_HOST_PORT</stringProp>
            <stringProp name="Argument.value">6973</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://${RUNTIME_HOST}:${RUNTIME_PORT}/onap/policy/clamp/acm/v2</stringProp>
            <stringProp name="Authorization.username">runtimeUser</stringProp>
            <stringProp name="Authorization.password">zb!XztG34</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.clearEachIteration">true</boolProp>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">X-ONAP-RequestID</stringProp>
            <stringProp name="Header.value">709c62b3-8918-41b9-a747-d21eb79c6c20</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">260000</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Commission AutomationComposition definition" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">tosca_definitions_version: tosca_simple_yaml_1_3&#xd;
data_types:&#xd;
  onap.datatypes.ToscaConceptIdentifier:&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    properties:&#xd;
      name:&#xd;
        type: string&#xd;
        required: true&#xd;
      version:&#xd;
        type: string&#xd;
        required: true&#xd;
  onap.datatype.acm.Target:&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    description: &gt;-&#xd;
      Definition for a entity in A&amp;AI to perform an Automation Composition&#xd;
      operation on&#xd;
    properties:&#xd;
      targetType:&#xd;
        type: string&#xd;
        description: Category for the target type&#xd;
        required: true&#xd;
        constraints:&#xd;
          - valid_values:&#xd;
              - VNF&#xd;
              - VM&#xd;
              - VFMODULE&#xd;
              - PNF&#xd;
      entityIds:&#xd;
        type: map&#xd;
        description: &gt;&#xd;
          Map of values that identify the resource. If none are provided, it is&#xd;
          assumed that the&#xd;
&#xd;
          entity that generated the ONSET event will be the target.&#xd;
        required: false&#xd;
        metadata:&#xd;
          clamp_possible_values: &apos;ClampExecution:CSAR_RESOURCES&apos;&#xd;
        entry_schema:&#xd;
          type: string&#xd;
  onap.datatype.acm.Actor:&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    description: An actor/operation/target definition&#xd;
    properties:&#xd;
      actor:&#xd;
        type: string&#xd;
        description: The actor performing the operation.&#xd;
        required: true&#xd;
        metadata:&#xd;
          clamp_possible_values: &apos;Dictionary:DefaultActors,ClampExecution:CDS/actor&apos;&#xd;
      operation:&#xd;
        type: string&#xd;
        description: The operation the actor is performing.&#xd;
        metadata:&#xd;
          clamp_possible_values: &apos;Dictionary:DefaultOperations,ClampExecution:CDS/operation&apos;&#xd;
        required: true&#xd;
      target:&#xd;
        type: onap.datatype.acm.Target&#xd;
        description: The resource the operation should be performed on.&#xd;
        required: true&#xd;
      payload:&#xd;
        type: map&#xd;
        description: Name/value pairs of payload information passed by Policy to the actor&#xd;
        required: false&#xd;
        metadata:&#xd;
          clamp_possible_values: &apos;ClampExecution:CDS/payload&apos;&#xd;
        entry_schema:&#xd;
          type: string&#xd;
  onap.datatype.acm.Operation:&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    description: An operation supported by an actor&#xd;
    properties:&#xd;
      id:&#xd;
        type: string&#xd;
        description: Unique identifier for the operation&#xd;
        required: true&#xd;
      description:&#xd;
        type: string&#xd;
        description: A user-friendly description of the intent for the operation&#xd;
        required: false&#xd;
      operation:&#xd;
        type: onap.datatype.acm.Actor&#xd;
        description: The definition of the operation to be performed.&#xd;
        required: true&#xd;
      timeout:&#xd;
        type: integer&#xd;
        description: The amount of time for the actor to perform the operation.&#xd;
        required: true&#xd;
      retries:&#xd;
        type: integer&#xd;
        description: &gt;-&#xd;
          The number of retries the actor should attempt to perform the&#xd;
          operation.&#xd;
        required: true&#xd;
        default: 0&#xd;
      success:&#xd;
        type: string&#xd;
        description: &gt;-&#xd;
          Points to the operation to invoke on success. A value of&#xd;
          &quot;final_success&quot; indicates and end to the operation.&#xd;
        required: false&#xd;
        default: final_success&#xd;
      failure:&#xd;
        type: string&#xd;
        description: Points to the operation to invoke on Actor operation failure.&#xd;
        required: false&#xd;
        default: final_failure&#xd;
      failure_timeout:&#xd;
        type: string&#xd;
        description: &gt;-&#xd;
          Points to the operation to invoke when the time out for the operation&#xd;
          occurs.&#xd;
        required: false&#xd;
        default: final_failure_timeout&#xd;
      failure_retries:&#xd;
        type: string&#xd;
        description: &gt;-&#xd;
          Points to the operation to invoke when the current operation has&#xd;
          exceeded its max retries.&#xd;
        required: false&#xd;
        default: final_failure_retries&#xd;
      failure_exception:&#xd;
        type: string&#xd;
        description: &gt;-&#xd;
          Points to the operation to invoke when the current operation causes an&#xd;
          exception.&#xd;
        required: false&#xd;
        default: final_failure_exception&#xd;
      failure_guard:&#xd;
        type: string&#xd;
        description: &gt;-&#xd;
          Points to the operation to invoke when the current operation is&#xd;
          blocked due to guard policy enforcement.&#xd;
        required: false&#xd;
        default: final_failure_guard&#xd;
  onap.datatypes.monitoring.managedObjectDNsBasic:&#xd;
    constraints: []&#xd;
    properties:&#xd;
      DN:&#xd;
        name: DN&#xd;
        type: string&#xd;
        typeVersion: 0.0.0&#xd;
        description: Managed object distinguished name&#xd;
        required: true&#xd;
        constraints: []&#xd;
        metadata: {}&#xd;
    name: onap.datatypes.monitoring.managedObjectDNsBasic&#xd;
    version: 0.0.0&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    metadata: {}&#xd;
  onap.datatypes.monitoring.managedObjectDNsBasics:&#xd;
    constraints: []&#xd;
    properties:&#xd;
      managedObjectDNsBasic:&#xd;
        name: managedObjectDNsBasic&#xd;
        type: map&#xd;
        typeVersion: 0.0.0&#xd;
        description: Managed object distinguished name object&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: onap.datatypes.monitoring.managedObjectDNsBasic&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
    name: onap.datatypes.monitoring.managedObjectDNsBasics&#xd;
    version: 0.0.0&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    metadata: {}&#xd;
  onap.datatypes.monitoring.measurementGroup:&#xd;
    constraints: []&#xd;
    properties:&#xd;
      measurementTypes:&#xd;
        name: measurementTypes&#xd;
        type: list&#xd;
        typeVersion: 0.0.0&#xd;
        description: List of measurement types&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: onap.datatypes.monitoring.measurementTypes&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
      managedObjectDNsBasic:&#xd;
        name: managedObjectDNsBasic&#xd;
        type: list&#xd;
        typeVersion: 0.0.0&#xd;
        description: List of managed object distinguished names&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: onap.datatypes.monitoring.managedObjectDNsBasics&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
    name: onap.datatypes.monitoring.measurementGroup&#xd;
    version: 0.0.0&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    metadata: {}&#xd;
  onap.datatypes.monitoring.measurementGroups:&#xd;
    constraints: []&#xd;
    properties:&#xd;
      measurementGroup:&#xd;
        name: measurementGroup&#xd;
        type: map&#xd;
        typeVersion: 0.0.0&#xd;
        description: Measurement Group&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: onap.datatypes.monitoring.measurementGroup&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
    name: onap.datatypes.monitoring.measurementGroups&#xd;
    version: 0.0.0&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    metadata: {}&#xd;
  onap.datatypes.monitoring.measurementType:&#xd;
    constraints: []&#xd;
    properties:&#xd;
      measurementType:&#xd;
        name: measurementType&#xd;
        type: string&#xd;
        typeVersion: 0.0.0&#xd;
        description: Measurement type&#xd;
        required: true&#xd;
        constraints: []&#xd;
        metadata: {}&#xd;
    name: onap.datatypes.monitoring.measurementType&#xd;
    version: 0.0.0&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    metadata: {}&#xd;
  onap.datatypes.monitoring.measurementTypes:&#xd;
    constraints: []&#xd;
    properties:&#xd;
      measurementType:&#xd;
        name: measurementType&#xd;
        type: map&#xd;
        typeVersion: 0.0.0&#xd;
        description: Measurement type object&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: onap.datatypes.monitoring.measurementType&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
    name: onap.datatypes.monitoring.measurementTypes&#xd;
    version: 0.0.0&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    metadata: {}&#xd;
  onap.datatypes.monitoring.nfFilter:&#xd;
    constraints: []&#xd;
    properties:&#xd;
      modelNames:&#xd;
        name: modelNames&#xd;
        type: list&#xd;
        typeVersion: 0.0.0&#xd;
        description: List of model names&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: string&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
      modelInvariantIDs:&#xd;
        name: modelInvariantIDs&#xd;
        type: list&#xd;
        typeVersion: 0.0.0&#xd;
        description: List of model invariant IDs&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: string&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
      modelVersionIDs:&#xd;
        name: modelVersionIDs&#xd;
        type: list&#xd;
        typeVersion: 0.0.0&#xd;
        description: List of model version IDs&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: string&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
      nfNames:&#xd;
        name: nfNames&#xd;
        type: list&#xd;
        typeVersion: 0.0.0&#xd;
        description: List of network functions&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: string&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
    name: onap.datatypes.monitoring.nfFilter&#xd;
    version: 0.0.0&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    metadata: {}&#xd;
  onap.datatypes.monitoring.subscription:&#xd;
    constraints: []&#xd;
    properties:&#xd;
      measurementGroups:&#xd;
        name: measurementGroups&#xd;
        type: list&#xd;
        typeVersion: 0.0.0&#xd;
        description: Measurement Groups&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: onap.datatypes.monitoring.measurementGroups&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
      fileBasedGP:&#xd;
        name: fileBasedGP&#xd;
        type: integer&#xd;
        typeVersion: 0.0.0&#xd;
        description: File based granularity period&#xd;
        required: true&#xd;
        constraints: []&#xd;
        metadata: {}&#xd;
      fileLocation:&#xd;
        name: fileLocation&#xd;
        type: string&#xd;
        typeVersion: 0.0.0&#xd;
        description: ROP file location&#xd;
        required: true&#xd;
        constraints: []&#xd;
        metadata: {}&#xd;
      subscriptionName:&#xd;
        name: subscriptionName&#xd;
        type: string&#xd;
        typeVersion: 0.0.0&#xd;
        description: Name of the subscription&#xd;
        required: true&#xd;
        constraints: []&#xd;
        metadata: {}&#xd;
      administrativeState:&#xd;
        name: administrativeState&#xd;
        type: string&#xd;
        typeVersion: 0.0.0&#xd;
        description: State of the subscription&#xd;
        required: true&#xd;
        constraints:&#xd;
          - valid_values:&#xd;
              - LOCKED&#xd;
              - UNLOCKED&#xd;
        metadata: {}&#xd;
      nfFilter:&#xd;
        name: nfFilter&#xd;
        type: map&#xd;
        typeVersion: 0.0.0&#xd;
        description: Network function filter&#xd;
        required: true&#xd;
        constraints: []&#xd;
        entry_schema:&#xd;
          type: onap.datatypes.monitoring.nfFilter&#xd;
          typeVersion: 0.0.0&#xd;
          constraints: []&#xd;
        metadata: {}&#xd;
    name: onap.datatypes.monitoring.subscription&#xd;
    version: 0.0.0&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    metadata: {}&#xd;
  org.onap.datatypes.policy.clamp.acm.httpAutomationCompositionElement.RestRequest:&#xd;
    version: 1.0.0&#xd;
    derived_from: tosca.datatypes.Root&#xd;
    properties:&#xd;
      restRequestId:&#xd;
        type: onap.datatypes.ToscaConceptIdentifier&#xd;
        typeVersion: 1.0.0&#xd;
        required: true&#xd;
        description: The name and version of a REST request to be sent to a REST endpoint&#xd;
      httpMethod:&#xd;
        type: string&#xd;
        required: true&#xd;
        constraints:&#xd;
          - valid_values:&#xd;
              - POST&#xd;
              - PUT&#xd;
              - GET&#xd;
              - DELETE&#xd;
        description: The REST method to use&#xd;
      path:&#xd;
        type: string&#xd;
        required: true&#xd;
        description: The path of the REST request relative to the base URL&#xd;
      body:&#xd;
        type: string&#xd;
        required: false&#xd;
        description: The body of the REST request for PUT and POST requests&#xd;
      expectedResponse:&#xd;
        type: integer&#xd;
        required: true&#xd;
        constraints: []&#xd;
        description: THe expected HTTP status code for the REST request&#xd;
    org.onap.datatypes.policy.clamp.acm.httpAutomationCompositionElement.ConfigurationEntity:&#xd;
      version: 1.0.0&#xd;
      derived_from: tosca.datatypes.Root&#xd;
      properties:&#xd;
        configurationEntityId:&#xd;
          type: onap.datatypes.ToscaConceptIdentifier&#xd;
          typeVersion: 1.0.0&#xd;
          required: true&#xd;
          description: &gt;-&#xd;
            The name and version of a Configuration Entity to be handled by the&#xd;
            HTTP Automation Composition Element&#xd;
        restSequence:&#xd;
          type: list&#xd;
          entry_schema:&#xd;
            type: &gt;-&#xd;
              org.onap.datatypes.policy.clamp.acm.httpAutomationCompositionElement.RestRequest&#xd;
            typeVersion: 1.0.0&#xd;
          description: A sequence of REST commands to send to the REST endpoint&#xd;
policy_types:&#xd;
  onap.policies.Monitoring:&#xd;
    derived_from: tosca.policies.Root&#xd;
    description: a base policy type for all policies that govern monitoring provisioning&#xd;
    version: 1.0.0&#xd;
    name: onap.policies.Monitoring&#xd;
  onap.policies.Sirisha:&#xd;
    derived_from: tosca.policies.Root&#xd;
    description: a base policy type for all policies that govern monitoring provisioning&#xd;
    version: 1.0.0&#xd;
    name: onap.policies.Sirisha&#xd;
  onap.policies.monitoring.dcae-pm-subscription-handler:&#xd;
    properties:&#xd;
      pmsh_policy:&#xd;
        name: pmsh_policy&#xd;
        type: onap.datatypes.monitoring.subscription&#xd;
        typeVersion: 0.0.0&#xd;
        description: PMSH Policy JSON&#xd;
        required: false&#xd;
        constraints: []&#xd;
        metadata: {}&#xd;
    name: onap.policies.monitoring.dcae-pm-subscription-handler&#xd;
    version: 1.0.0&#xd;
    derived_from: onap.policies.Monitoring&#xd;
    metadata: {}&#xd;
  onap.policies.acm.operational.Common:&#xd;
    derived_from: tosca.policies.Root&#xd;
    version: 1.0.0&#xd;
    name: onap.policies.acm.operational.Common&#xd;
    description: &gt;&#xd;
      Operational Policy for Automation Composition execution. Originated in&#xd;
      Frankfurt to support TOSCA Compliant&#xd;
&#xd;
      Policy Types. This does NOT support the legacy Policy YAML policy type.&#xd;
    properties:&#xd;
      id:&#xd;
        type: string&#xd;
        description: The unique Automation Composition id.&#xd;
        required: true&#xd;
      timeout:&#xd;
        type: integer&#xd;
        description: &gt;&#xd;
          Overall timeout for executing all the operations. This timeout should&#xd;
          equal or exceed the total&#xd;
&#xd;
          timeout for each operation listed.&#xd;
        required: true&#xd;
      abatement:&#xd;
        type: boolean&#xd;
        description: &gt;-&#xd;
          Whether an abatement event message will be expected for the Automation&#xd;
          Composition from DCAE.&#xd;
        required: true&#xd;
        default: false&#xd;
      trigger:&#xd;
        type: string&#xd;
        description: &gt;-&#xd;
          Initial operation to execute upon receiving an Onset event message for&#xd;
          the Automation Composition.&#xd;
        required: true&#xd;
      operations:&#xd;
        type: list&#xd;
        description: &gt;-&#xd;
          List of operations to be performed when Automation Composition is&#xd;
          triggered.&#xd;
        required: true&#xd;
        entry_schema:&#xd;
          type: onap.datatype.acm.Operation&#xd;
  onap.policies.acm.operational.common.Apex:&#xd;
    derived_from: onap.policies.acm.operational.Common&#xd;
    type_version: 1.0.0&#xd;
    version: 1.0.0&#xd;
    name: onap.policies.acm.operational.common.Apex&#xd;
    description: Operational policies for Apex PDP&#xd;
    properties:&#xd;
      engineServiceParameters:&#xd;
        type: string&#xd;
        description: &gt;-&#xd;
          The engine parameters like name, instanceCount, policy implementation,&#xd;
          parameters etc.&#xd;
        required: true&#xd;
      eventInputParameters:&#xd;
        type: string&#xd;
        description: The event input parameters.&#xd;
        required: true&#xd;
      eventOutputParameters:&#xd;
        type: string&#xd;
        description: The event output parameters.&#xd;
        required: true&#xd;
      javaProperties:&#xd;
        type: string&#xd;
        description: Name/value pairs of properties to be set for APEX if needed.&#xd;
        required: false&#xd;
node_types:&#xd;
  org.onap.policy.clamp.acm.Participant:&#xd;
    version: 1.0.1&#xd;
    derived_from: tosca.nodetypes.Root&#xd;
    properties:&#xd;
      provider:&#xd;
        type: string&#xd;
        requred: false&#xd;
  org.onap.policy.clamp.acm.AutomationCompositionElement:&#xd;
    version: 1.0.1&#xd;
    derived_from: tosca.nodetypes.Root&#xd;
    properties:&#xd;
      provider:&#xd;
        type: string&#xd;
        required: false&#xd;
        metadata:&#xd;
          common: true&#xd;
        description: &gt;-&#xd;
          Specifies the organization that provides the automation composition&#xd;
          element&#xd;
      participant_id:&#xd;
        type: onap.datatypes.ToscaConceptIdentifier&#xd;
        requred: true&#xd;
        metadata:&#xd;
          common: true&#xd;
      participantType:&#xd;
        type: onap.datatypes.ToscaConceptIdentifier&#xd;
        required: true&#xd;
        metadata:&#xd;
          common: true&#xd;
        description: &gt;-&#xd;
          The identity of the participant type that hosts this type of&#xd;
          Automation Composition Element&#xd;
      startPhase:&#xd;
        type: integer&#xd;
        required: false&#xd;
        constraints:&#xd;
          - greater_or_equal: 0&#xd;
        metadata:&#xd;
          common: true&#xd;
        description: &gt;-&#xd;
          A value indicating the start phase in which this automation&#xd;
          composition element will be started, the first start phase is zero.&#xd;
          Automation Composition Elements are started in their start_phase order&#xd;
          and stopped in reverse start phase order. Automation Composition&#xd;
          Elements with the same start phase are started and stopped&#xd;
          simultaneously&#xd;
      uninitializedToPassiveTimeout:&#xd;
        type: integer&#xd;
        required: false&#xd;
        constraints:&#xd;
          - greater_or_equal: 0&#xd;
        default: 60&#xd;
        metadata:&#xd;
          common: true&#xd;
        description: &gt;-&#xd;
          The maximum time in seconds to wait for a state chage from&#xd;
          uninitialized to passive&#xd;
      passiveToRunningTimeout:&#xd;
        type: integer&#xd;
        required: false&#xd;
        constraints:&#xd;
          - greater_or_equal: 0&#xd;
        default: 60&#xd;
        metadata:&#xd;
          common: true&#xd;
        description: &gt;-&#xd;
          The maximum time in seconds to wait for a state chage from passive to&#xd;
          running&#xd;
      runningToPassiveTimeout:&#xd;
        type: integer&#xd;
        required: false&#xd;
        constraints:&#xd;
          - greater_or_equal: 0&#xd;
        default: 60&#xd;
        metadata:&#xd;
          common: true&#xd;
        description: &gt;-&#xd;
          The maximum time in seconds to wait for a state chage from running to&#xd;
          passive&#xd;
      passiveToUninitializedTimeout:&#xd;
        type: integer&#xd;
        required: false&#xd;
        constraints:&#xd;
          - greater_or_equal: 0&#xd;
        default: 60&#xd;
        metadata:&#xd;
          common: true&#xd;
        description: &gt;-&#xd;
          The maximum time in seconds to wait for a state chage from passive to&#xd;
          uninitialized&#xd;
  org.onap.policy.clamp.acm.AutomationComposition:&#xd;
    version: 1.0.1&#xd;
    derived_from: tosca.nodetypes.Root&#xd;
    properties:&#xd;
      provider:&#xd;
        type: string&#xd;
        required: false&#xd;
        metadata:&#xd;
          common: true&#xd;
        description: &gt;-&#xd;
          Specifies the organization that provides the automation composition&#xd;
          element&#xd;
      elements:&#xd;
        type: list&#xd;
        required: true&#xd;
        metadata:&#xd;
          common: true&#xd;
        entry_schema:&#xd;
          type: onap.datatypes.ToscaConceptIdentifier&#xd;
        description: &gt;-&#xd;
          Specifies a list of automation composition element definitions that&#xd;
          make up this automation composition definition&#xd;
  org.onap.policy.clamp.acm.PolicyAutomationCompositionElement:&#xd;
    version: 1.0.1&#xd;
    derived_from: org.onap.policy.clamp.acm.AutomationCompositionElement&#xd;
    properties:&#xd;
      policy_type_id:&#xd;
        type: onap.datatypes.ToscaConceptIdentifier&#xd;
        requred: true&#xd;
      policy_id:&#xd;
        type: onap.datatypes.ToscaConceptIdentifier&#xd;
        requred: false&#xd;
  org.onap.policy.clamp.acm.CDSAutomationCompositionElement:&#xd;
    version: 1.0.1&#xd;
    derived_from: org.onap.policy.clamp.acm.AutomationCompositionElement&#xd;
    properties:&#xd;
      cds_blueprint_id:&#xd;
        type: onap.datatypes.ToscaConceptIdentifier&#xd;
        requred: true&#xd;
  org.onap.policy.clamp.acm.K8SMicroserviceAutomationCompositionElement:&#xd;
    version: 1.0.1&#xd;
    derived_from: org.onap.policy.clamp.acm.AutomationCompositionElement&#xd;
    properties:&#xd;
      chart:&#xd;
        type: string&#xd;
        required: true&#xd;
      configs:&#xd;
        type: list&#xd;
        required: false&#xd;
      requirements:&#xd;
        type: string&#xd;
        requred: false&#xd;
      templates:&#xd;
        type: list&#xd;
        required: false&#xd;
        entry_schema: null&#xd;
      values:&#xd;
        type: string&#xd;
        requred: true&#xd;
  org.onap.policy.clamp.acm.HttpAutomationCompositionElement:&#xd;
    version: 1.0.1&#xd;
    derived_from: org.onap.policy.clamp.acm.AutomationCompositionElement&#xd;
    properties:&#xd;
      baseUrl:&#xd;
        type: string&#xd;
        required: true&#xd;
        description: &gt;-&#xd;
          The base URL to be prepended to each path, identifies the host for the&#xd;
          REST endpoints.&#xd;
      httpHeaders:&#xd;
        type: map&#xd;
        required: false&#xd;
        entry_schema:&#xd;
          type: string&#xd;
        description: HTTP headers to send on REST requests&#xd;
      configurationEntities:&#xd;
        type: map&#xd;
        required: true&#xd;
        entry_schema:&#xd;
          type: &gt;-&#xd;
            org.onap.datatypes.policy.clamp.acm.httpAutomationCompositionElement.ConfigurationEntity&#xd;
          typeVersion: 1.0.0&#xd;
        description: &gt;-&#xd;
          The connfiguration entities the Automation Composition Element is&#xd;
          managing and their associated REST requests&#xd;
topology_template:&#xd;
  inputs:&#xd;
    pmsh_monitoring_policy:&#xd;
      type: onap.datatypes.ToscaConceptIdentifier&#xd;
      description: The ID of the PMSH monitoring policy to use&#xd;
      default:&#xd;
        name: &gt;-&#xd;
          MICROSERVICE_vLoadBalancerMS_v1_0_dcae-pm-subscription-handler_1_0_0test&#xd;
        version: 1.0.0&#xd;
    pmsh_operational_policy:&#xd;
      type: onap.datatypes.ToscaConceptIdentifier&#xd;
      description: The ID of the PMSH operational policy to use&#xd;
      default:&#xd;
        name: operational.apex.pmcontrol&#xd;
        version: 1.0.0&#xd;
  node_templates:&#xd;
    org.onap.policy.clamp.acm.PolicyParticipant:&#xd;
      version: 2.3.1&#xd;
      type: org.onap.policy.clamp.acm.Participant&#xd;
      type_version: 1.0.1&#xd;
      description: Participant for DCAE microservices&#xd;
      properties:&#xd;
        provider: ONAP&#xd;
    org.onap.domain.pmsh.PMSH_MonitoringPolicyAutomationCompositionElement:&#xd;
      version: 1.2.3&#xd;
      type: org.onap.policy.clamp.acm.PolicyAutomationCompositionElement&#xd;
      type_version: 1.0.0&#xd;
      description: &gt;-&#xd;
        Automation composition element for the monitoring policy for Performance&#xd;
        Management Subscription Handling&#xd;
      properties:&#xd;
        provider: Ericsson&#xd;
        participant_id:&#xd;
          name: org.onap.PM_Policy&#xd;
          version: 1.0.0&#xd;
        participantType:&#xd;
          name: org.onap.policy.clamp.acm.PolicyParticipant&#xd;
          version: 2.3.1&#xd;
        policy_type_id:&#xd;
          name: onap.policies.monitoring.pm-subscription-handler&#xd;
          version: 1.0.0&#xd;
        policy_id:&#xd;
          get_input: pmsh_monitoring_policy&#xd;
    org.onap.domain.pmsh.PMSH_OperationalPolicyAutomationCompositionElement:&#xd;
      version: 1.2.3&#xd;
      type: org.onap.policy.clamp.acm.PolicyAutomationCompositionElement&#xd;
      type_version: 1.0.0&#xd;
      description: &gt;-&#xd;
        Automation composition element for the operational policy for&#xd;
        Performance Management Subscription Handling&#xd;
      properties:&#xd;
        provider: Ericsson&#xd;
        participant_id:&#xd;
          name: org.onap.PM_Policy&#xd;
          version: 1.0.0&#xd;
        participantType:&#xd;
          name: org.onap.policy.clamp.acm.PolicyParticipant&#xd;
          version: 2.3.1&#xd;
        policy_type_id:&#xd;
          name: onap.policies.operational.pm-subscription-handler&#xd;
          version: 1.0.0&#xd;
        policy_id:&#xd;
          get_input: pmsh_operational_policy&#xd;
    org.onap.policy.clamp.acm.KubernetesParticipant:&#xd;
      version: 2.3.4&#xd;
      type: org.onap.policy.clamp.acm.Participant&#xd;
      type_version: 1.0.1&#xd;
      description: Participant for K8S&#xd;
      properties:&#xd;
        provider: ONAP&#xd;
    org.onap.domain.database.PMSH_K8SMicroserviceAutomationCompositionElement:&#xd;
      version: 1.2.3&#xd;
      type: org.onap.policy.clamp.acm.K8SMicroserviceAutomationCompositionElement&#xd;
      type_version: 1.0.0&#xd;
      description: Automation composition element for the K8S microservice for PMSH&#xd;
      properties:&#xd;
        provider: ONAP&#xd;
        participant_id:&#xd;
          name: K8sParticipant0&#xd;
          version: 1.0.0&#xd;
        participantType:&#xd;
          name: org.onap.policy.clamp.acm.KubernetesParticipant&#xd;
          version: 2.3.4&#xd;
        chart:&#xd;
          chartId:&#xd;
            name: dcae-pmsh&#xd;
            version: 10.0.0&#xd;
          namespace: onap&#xd;
          releaseName: onap-dcae-pmsh&#xd;
          repository:&#xd;
            repoName: chartmuseum&#xd;
            address: &apos;http://chart-museum:80&apos;&#xd;
            userName: onapinitializer&#xd;
            password: demo123456!&#xd;
          overrideParams:&#xd;
            global.masterPassword: test&#xd;
    org.onap.policy.clamp.acm.HttpParticipant:&#xd;
      version: 2.3.4&#xd;
      type: org.onap.policy.clamp.acm.Participant&#xd;
      type_version: 1.0.1&#xd;
      description: Participant for Http requests&#xd;
      properties:&#xd;
        provider: ONAP&#xd;
    org.onap.domain.database.Http_PMSHMicroserviceAutomationCompositionElement:&#xd;
      version: 1.2.3&#xd;
      type: org.onap.policy.clamp.acm.HttpAutomationCompositionElement&#xd;
      type_version: 1.0.1&#xd;
      description: &gt;-&#xd;
        Automation composition element for the http requests of PMSH&#xd;
        microservice&#xd;
      properties:&#xd;
        provider: ONAP&#xd;
        participant_id:&#xd;
          name: HttpParticipant0&#xd;
          version: 1.0.0&#xd;
        participantType:&#xd;
          name: org.onap.policy.clamp.acm.HttpParticipant&#xd;
          version: 2.3.4&#xd;
        uninitializedToPassiveTimeout: 180&#xd;
        startPhase: 1&#xd;
        baseUrl: &apos;https://dcae-pmsh:8443&apos;&#xd;
        httpHeaders:&#xd;
          Content-Type: application/json&#xd;
        configurationEntities:&#xd;
          - configurationEntityId:&#xd;
              name: entity1&#xd;
              version: 1.0.1&#xd;
            restSequence:&#xd;
              - restRequestId:&#xd;
                  name: request1&#xd;
                  version: 1.0.1&#xd;
                httpMethod: POST&#xd;
                path: subscription&#xd;
                body: &gt;-&#xd;
                  { &quot;subscription&quot;:{ &quot;subscriptionName&quot;:&quot;new_sub_01&quot;,&#xd;
                  &quot;operationalPolicyName&quot;:&quot;pmsh-operational-policy&quot;,&#xd;
                  &quot;automationCompositionName&quot;:&quot;automationComposition-name&quot;, &quot;nfFilter&quot;:{ &quot;nfNames&quot;:[&#xd;
                  &quot;^pnf*&quot; ], &quot;modelInvariantIDs&quot;:[&#xd;
                  &quot;7129e420-d396-4efb-af02-6b83499b12f5&quot; ], &quot;modelVersionIDs&quot;:[&#xd;
                  &quot;e80a6ae3-cafd-4d24-850d-e14c084a5ca7&quot; ], &quot;modelNames&quot;:[&#xd;
                  &quot;pnf_134&quot; ] }, &quot;measurementGroups&quot;:[ { &quot;measurementGroup&quot;:{&#xd;
                  &quot;measurementGroupName&quot;:&quot;msgroup_01&quot;,&#xd;
                  &quot;administrativeState&quot;:&quot;UNLOCKED&quot;, &quot;fileBasedGP&quot;:15,&#xd;
                  &quot;fileLocation&quot;:&quot;/pm/pm.xml&quot;, &quot;measurementTypes&quot;:[ {&#xd;
                  &quot;measurementType&quot;:&quot;EutranCell.*&quot; }, {&#xd;
                  &quot;measurementType&quot;:&quot;EutranCellRelation.pmCounter1&quot; }, {&#xd;
                  &quot;measurementType&quot;:&quot;EutranCellRelation.pmCounter2&quot; } ],&#xd;
                  &quot;managedObjectDNsBasic&quot;:[ {&#xd;
                  &quot;DN&quot;:&quot;ManagedElement=1,ENodeBFunction=1,EUtranCell=CityCenter1&quot;&#xd;
                  }, {&#xd;
                  &quot;DN&quot;:&quot;ManagedElement=1,ENodeBFunction=1,EUtranCell=CityCenter1,&#xd;
                  EUtranCellRelation=CityCenter2&quot; }, {&#xd;
                  &quot;DN&quot;:&quot;ManagedElement=1,ENodeBFunction=1,EUtranCell=CityCenter1,&#xd;
                  EUtranCellRelation=CityCenter3&quot; } ] } } ] } }&#xd;
                expectedResponse: 201&#xd;
    org.onap.domain.sample.GenericK8s_AutomationCompositionDefinition:&#xd;
      version: 1.2.3&#xd;
      type: org.onap.policy.clamp.acm.AutomationComposition&#xd;
      type_version: 1.0.0&#xd;
      description: Automation composition for Hello World&#xd;
      properties:&#xd;
        provider: ONAP&#xd;
        elements:&#xd;
          - name: &gt;-&#xd;
              org.onap.domain.database.PMSH_K8SMicroserviceAutomationCompositionElement&#xd;
            version: 1.2.3&#xd;
          - name: &gt;-&#xd;
              org.onap.domain.database.Http_PMSHMicroserviceAutomationCompositionElement&#xd;
            version: 1.2.3&#xd;
          - name: &gt;-&#xd;
              org.onap.domain.pmsh.PMSH_MonitoringPolicyAutomationCompositionElement&#xd;
            version: 1.2.3&#xd;
          - name: &gt;-&#xd;
              org.onap.domain.pmsh.PMSH_OperationalPolicyAutomationCompositionElement&#xd;
            version: 1.2.3&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RUNTIME_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${RUNTIME_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/onap/policy/clamp/acm/v2/commission</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Instantiate acm" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;automationCompositionList&quot;: [&#xd;
        {&#xd;
            &quot;name&quot;: &quot;PMSHInstance0&quot;,&#xd;
            &quot;version&quot;: &quot;1.0.1&quot;,&#xd;
            &quot;definition&quot;: {&#xd;
                &quot;name&quot;: &quot;org.onap.domain.sample.GenericK8s_AutomationCompositionDefinition&quot;,&#xd;
                &quot;version&quot;: &quot;1.2.3&quot;&#xd;
            },&#xd;
            &quot;state&quot;: &quot;UNINITIALISED&quot;,&#xd;
            &quot;orderedState&quot;: &quot;UNINITIALISED&quot;,&#xd;
            &quot;description&quot;: &quot;PMSH automation composition instance 0&quot;,&#xd;
            &quot;elements&quot;: {&#xd;
                &quot;709c62b3-8918-41b9-a747-d21eb79c6c21&quot;: {&#xd;
                    &quot;id&quot;: &quot;709c62b3-8918-41b9-a747-d21eb79c6c21&quot;,&#xd;
                    &quot;definition&quot;: {&#xd;
                        &quot;name&quot;: &quot;org.onap.domain.pmsh.PMSH_MonitoringPolicyAutomationCompositionElement&quot;,&#xd;
                        &quot;version&quot;: &quot;1.2.3&quot;&#xd;
                    },&#xd;
                    &quot;participantId&quot;: {&#xd;
                        &quot;name&quot;: &quot;org.onap.PM_Policy&quot;,&#xd;
                        &quot;version&quot;: &quot;1.0.0&quot;&#xd;
                    },&#xd;
                    &quot;participantType&quot;: {&#xd;
                        &quot;name&quot;: &quot;org.onap.policy.clamp.acm.PolicyParticipant&quot;,&#xd;
                        &quot;version&quot;: &quot;2.3.1&quot;&#xd;
                    },&#xd;
                    &quot;state&quot;: &quot;UNINITIALISED&quot;,&#xd;
                    &quot;orderedState&quot;: &quot;UNINITIALISED&quot;,&#xd;
                    &quot;description&quot;: &quot;Monitoring Policy Automation Composition Element for the PMSH instance 0 automation composition&quot;&#xd;
                },&#xd;
                &quot;709c62b3-8918-41b9-a747-d21eb79c6c22&quot;: {&#xd;
                    &quot;id&quot;: &quot;709c62b3-8918-41b9-a747-d21eb79c6c22&quot;,&#xd;
                    &quot;definition&quot;: {&#xd;
                        &quot;name&quot;: &quot;org.onap.domain.pmsh.PMSH_OperationalPolicyAutomationCompositionElement&quot;,&#xd;
                        &quot;version&quot;: &quot;1.2.3&quot;&#xd;
                    },&#xd;
                    &quot;participantId&quot;: {&#xd;
                        &quot;name&quot;: &quot;org.onap.PM_Policy&quot;,&#xd;
                        &quot;version&quot;: &quot;1.0.0&quot;&#xd;
                    },&#xd;
                    &quot;participantType&quot;: {&#xd;
                        &quot;name&quot;: &quot;org.onap.policy.clamp.acm.PolicyParticipant&quot;,&#xd;
                        &quot;version&quot;: &quot;2.3.1&quot;&#xd;
                    },&#xd;
                    &quot;state&quot;: &quot;UNINITIALISED&quot;,&#xd;
                    &quot;orderedState&quot;: &quot;UNINITIALISED&quot;,&#xd;
                    &quot;description&quot;: &quot;Operational Policy Automation Composition Element for the PMSH instance 0 automation composition&quot;&#xd;
                }&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}&#xd;
&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RUNTIME_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${RUNTIME_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/onap/policy/clamp/acm/v2/instantiation</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="AutomationComposition Test Flow" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">259200</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check acm state" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RUNTIME_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${RUNTIME_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/onap/policy/clamp/acm/v2/instantiation</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Basic Health Check</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change State to PASSIVE" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;orderedState&quot;: &quot;PASSIVE&quot;,&#xd;
    &quot;automationCompositionIdentifierList&quot;: [&#xd;
        {&#xd;
            &quot;name&quot;: &quot;PMSHInstance0&quot;,&#xd;
            &quot;version&quot;: &quot;1.0.1&quot;&#xd;
        }&#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RUNTIME_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${RUNTIME_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/onap/policy/clamp/acm/v2/instantiation/command</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">6000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
              <stringProp name="51508">400</stringProp>
              <stringProp name="51514">406</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check acm state" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RUNTIME_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${RUNTIME_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/onap/policy/clamp/acm/v2/instantiation</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Basic Health Check</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change State to UNINITIALISED" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;orderedState&quot;: &quot;UNINITIALISED&quot;,&#xd;
    &quot;automationCompositionIdentifierList&quot;: [&#xd;
        {&#xd;
            &quot;name&quot;: &quot;PMSHInstance0&quot;,&#xd;
            &quot;version&quot;: &quot;1.0.1&quot;&#xd;
        }&#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RUNTIME_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${RUNTIME_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/onap/policy/clamp/acm/v2/instantiation/command</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="51508">400</stringProp>
              <stringProp name="51514">406</stringProp>
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">34</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">6000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check acm state" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RUNTIME_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${RUNTIME_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/onap/policy/clamp/acm/v2/instantiation</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Basic Health Check</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </PostThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete instantiated acm" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RUNTIME_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${RUNTIME_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/onap/policy/clamp/acm/v2/instantiation?name=PMSHInstance0&amp;version=1.0.1</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">6000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete AutomationComposition Definition" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${RUNTIME_HOST}</stringProp>
          <stringProp name="HTTPSampler.port">${RUNTIME_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/onap/policy/clamp/acm/v2/commission?name=NULL&amp;version=0.0.0</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">./acm_stability/testsummary.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">./acm_stability/resultTree.log</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">./acm_stability/resultTable.log</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
